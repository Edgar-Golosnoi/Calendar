{"ast":null,"code":"var _jsxFileName = \"/home/edgar/calendar/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport App from './App';\nimport Russian from './lang/ru.json';\nimport English from './lang/en.json';\nimport Arabic from './lang/ar.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locale = navigator.language;\nlet lang;\nif (locale === \"en\") {\n  lang = English;\n} else {\n  if (locale === \"ru\") {\n    lang = Russian;\n  } else {\n    lang = Arabic;\n  }\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(IntlProvider, {\n    locale: locale,\n    messages: Russian\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","IntlProvider","App","Russian","English","Arabic","jsxDEV","_jsxDEV","locale","navigator","language","lang","root","createRoot","document","getElementById","render","StrictMode","children","messages","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/edgar/calendar/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from 'react-intl'; \nimport App from './App';\nimport Russian from './lang/ru.json';\nimport English from './lang/en.json';\nimport Arabic from './lang/ar.json';\n\n\nconst locale = navigator.language;\n\nlet lang;\nif (locale===\"en\") {\n   lang = English;\n} else {\n   if (locale === \"ru\") {\n       lang = Russian;\n   } else {\n       lang = Arabic;\n   }\n}\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  <IntlProvider locale ={locale} messages={Russian}></IntlProvider>\n        <App />\n  </React.StrictMode>,\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,YAAY,QAAQ,YAAY;AACzC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,MAAM,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,MAAM,GAAGC,SAAS,CAACC,QAAQ;AAEjC,IAAIC,IAAI;AACR,IAAIH,MAAM,KAAG,IAAI,EAAE;EAChBG,IAAI,GAAGP,OAAO;AACjB,CAAC,MAAM;EACJ,IAAII,MAAM,KAAK,IAAI,EAAE;IACjBG,IAAI,GAAGR,OAAO;EAClB,CAAC,MAAM;IACHQ,IAAI,GAAGN,MAAM;EACjB;AACH;AAIA,MAAMO,IAAI,GAAGZ,QAAQ,CAACa,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTT,OAAA,CAACR,KAAK,CAACkB,UAAU;EAAAC,QAAA,gBACjBX,OAAA,CAACN,YAAY;IAACO,MAAM,EAAGA,MAAO;IAACW,QAAQ,EAAEhB;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAgB,eAC3DhB,OAAA,CAACL,GAAG;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACM,CACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}